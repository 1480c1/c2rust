diff --git a/html/html.h b/html/html.h
index 59103b3..a5544da 100644
--- a/html/html.h
+++ b/html/html.h
@@ -26,7 +26,7 @@ extern "C" {
 #endif
 
 struct html_renderopt {
-	struct {
+	struct toc_data {
 		int header_count;
 		int current_level;
 		int level_offset;
diff --git a/setup.py b/setup.py
index a780cb0..29405c5 100644
--- a/setup.py
+++ b/setup.py
@@ -35,6 +35,22 @@ class GPerfingBuildExt(build_ext):
         process_gperf_file("src/html_entities.gperf", "src/html_entities.h")
         build_ext.run(self)
 
+# Change these to the correct paths
+plugin_path     = "../galois/C2Rust/cross-checks/c-checks/clang-plugin/build/plugin/CrossChecks.so"
+runtime_path    = "../galois/C2Rust/cross-checks/c-checks/clang-plugin/build/runtime/libruntime.a"
+fakechecks_path = "../galois/C2Rust/cross-checks/libfakechecks"
+clevrbuf_path   = "../galois/C2Rust/cross-checks/ReMon/libclevrbuf"
+
+os.environ["CC"] = "clang"
+plugin_args = ['-Xclang', '-load',
+               '-Xclang', plugin_path,
+               '-Xclang', '-add-plugin',
+               '-Xclang', 'crosschecks',
+               '-Xclang', '-plugin-arg-crosschecks',
+               '-Xclang', '-Csnudown.c2r',
+               '-ffunction-sections', # Used by --icf
+               ]
+
 setup(
     name='snudown',
     version=version,
@@ -46,8 +62,15 @@ setup(
     ext_modules=[
         Extension(
             name='snudown',
-            sources=['snudown.c'] + c_files_in('src/') + c_files_in('html/'),
-            include_dirs=['src', 'html']
+            sources=['snudown.c', 'xchecks.c'] + c_files_in('src/') + c_files_in('html/'),
+            include_dirs=['src', 'html'],
+            library_dirs=[fakechecks_path, clevrbuf_path],
+            #libraries=["fakechecks"],
+            libraries=["clevrbuf"],
+            extra_compile_args=plugin_args,
+            extra_link_args=['-fuse-ld=gold', '-Wl,--gc-sections,--icf=safe',
+                             '-Wl,-rpath,{},-rpath,{}'.format(fakechecks_path, clevrbuf_path)],
+            extra_objects=[runtime_path],
         )
     ],
 )
diff --git a/snudown.c2r b/snudown.c2r
new file mode 100644
index 0000000..0dd54cd
--- /dev/null
+++ b/snudown.c2r
@@ -0,0 +1,130 @@
+---
+# System headers
+/usr/include/python2.7/object.h:
+    - item: struct
+      name: PyMemberDef
+      custom_hash: "xcheck_hash_PyMemberDef"
+
+# Our own custom cross-checks
+xchecks.c:
+    - item: defaults
+      disable_xchecks: true
+
+# snudown files
+snudown.c:
+    - item: defaults
+      disable_xchecks: true
+      #all_args: default
+
+# html/*.c
+html/html.c:
+    - item: defaults
+      disable_xchecks: true
+
+html/houdini_href_e.c:
+    - item: defaults
+      disable_xchecks: true
+
+html/houdini_html_e.c:
+    - item: defaults
+      disable_xchecks: true
+
+html/html_smartypants.c:
+    - item: defaults
+      disable_xchecks: true
+
+# Translated snudown files
+src/autolink.c:
+    - item: defaults
+      all_args: default
+
+    - item: function
+      name: sd_autolink__www
+      args:
+        rewind_p: disabled
+        no_slash: disabled
+
+    - item: function
+      name: sd_autolink__email
+      args:
+        rewind_p: disabled
+        no_slash: disabled
+
+    - item: function
+      name: sd_autolink__url
+      args:
+        rewind_p: disabled
+        no_slash: disabled
+
+    - item: function
+      name: sd_autolink__subreddit
+      args:
+        rewind_p: disabled
+        no_slash: disabled
+
+    - item: function
+      name: sd_autolink__username
+      args:
+        rewind_p: disabled
+        no_slash: disabled
+
+src/buffer.c:
+    - item: defaults
+      all_args: default
+
+    - item: function
+      name: bufprintf
+      disable_xchecks: true
+
+src/buffer.h:
+    - item: struct
+      name: buf
+      #custom_hash: "xcheck_hash_struct_buf"
+      fields:
+        data: disabled # FIXME: hash up to buf.size bytes
+
+src/html_entities.gperf:
+    - item: defaults
+      all_args: default
+
+src/markdown.c:
+    - item: defaults
+      all_args: default
+
+    - item: struct
+      name: sd_markdown
+      fields:
+        # sd_markdown_new doesn't initialize refs
+        refs: disabled
+        # Fields which the Rust version doesn't hash
+        # FIXME: hash these fields
+        cb: disabled
+        active_char: disabled
+        work_bufs: disabled
+
+    - item: function
+      name: tag_length
+      args:
+        autolink: disabled
+
+    - item: function
+      name: is_ref
+      args:
+        last: disabled # TODO: cross-check this on exit
+
+    - item: function
+      name: parse_table_header
+      args:
+        columns: disabled
+        column_data: disabled
+
+src/stack.c:
+    - item: defaults
+      all_args: default
+
+    - item: function
+      name: stack_init
+      args:
+        # Segfault on xcheck(st), for some reason
+        st: disabled
+...
diff --git a/xchecks.c b/xchecks.c
new file mode 100644
index 0000000..6607010
--- /dev/null
+++ b/xchecks.c
@@ -0,0 +1,8 @@
+unsigned long long xcheck_hash_PyMemberDef(void *x) {
+    // TODO
+    return 0x123456789ABCDEFULL;
+}
+
+unsigned long long xcheck_hash_struct_buf(void *p) {
+    return 0xABCDEF12345678ULL;
+}
